# Generated by Django 5.1.4 on 2025-01-09 15:16

import django.db.models.constraints
import wagtail.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('home', '0055_gallerypage_impressumpage_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='SenseBoxLocation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, default='leer', help_text='(optional) Name des Ortes', max_length=255)),
                ('location_latitude', models.CharField(default='52.516221', help_text='Latitude: Zentraler Punkt eines Ortes/ einer Stadt für den im Umkreis automatisch SenseBoxen ermittelt werden sollen.', max_length=255)),
                ('location_longitude', models.CharField(default='13.3992', help_text='Longitude: Zentraler Punkt eines Ortes/ einer Stadt für den im Umkreis automatisch SenseBoxen ermittelt werden sollen.', max_length=255)),
                ('maxDistance', models.IntegerField(default='30000', help_text='Radius um den Mittelpunkt, der einbezogen werden soll in Metern.')),
                ('exposure', models.CharField(default='outdoor', help_text='Welche Art von Sensor soll dargestellt werden? Erlaubte Werte: "indoor", "outdoor", "mobile", "unknown"', max_length=50)),
            ],
            options={
                'verbose_name': 'SenseBox Location',
                'verbose_name_plural': 'SenseBox Locations',
            },
        ),
        migrations.CreateModel(
            name='SensorsInfoTable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sensor_id', models.CharField(help_text='Sensor ID', max_length=255)),
                ('sensor_name', models.CharField(help_text='Sensor Name', max_length=255)),
                ('sensor_unit', models.CharField(help_text='Sensor Unit', max_length=255)),
                ('sensor_type', models.CharField(help_text='Sensor Type', max_length=255)),
                ('box_name', models.CharField(blank=True, help_text='Name des Sensors', max_length=255)),
                ('box_grouptag', models.CharField(blank=True, help_text='Box Grouptag', max_length=255)),
                ('lat', models.CharField(blank=True, help_text='Latitude', max_length=255)),
                ('lon', models.CharField(blank=True, help_text='Longitude', max_length=255)),
            ],
            options={
                'verbose_name': 'Sensors Info',
                'verbose_name_plural': 'Sensors Info Table',
            },
        ),
        migrations.RemoveField(
            model_name='impressumpage',
            name='page_ptr',
        ),
        migrations.RemoveField(
            model_name='homepage',
            name='header',
        ),
        migrations.AlterField(
            model_name='homepage',
            name='body',
            field=wagtail.fields.StreamField([('statistics_placeholder', 0), ('paragraph', 2)], blank=True, block_lookup={0: ('wagtail.blocks.StructBlock', [[]], {}), 1: ('wagtail.blocks.RichTextBlock', (), {'features': ['h1', 'h2', 'h3', 'bold', 'italic', 'link', 'ol', 'ul', 'document-link', 'image', 'embed'], 'help_text': 'Textfeld für beliebigen Text', 'required': False}), 2: ('wagtail.blocks.StructBlock', [[('paragraph', 1)]], {})}, default=None, null=True),
        ),
        migrations.CreateModel(
            name='GroupTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag', models.CharField(max_length=255)),
            ],
            options={
                'constraints': [models.UniqueConstraint(deferrable=django.db.models.constraints.Deferrable['DEFERRED'], fields=('tag',), name='unique_tag_constraint')],
            },
        ),
        migrations.CreateModel(
            name='SenseBoxTable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sensebox_id', models.CharField(help_text='ID der SenseBox', max_length=255)),
                ('name', models.CharField(blank=True, help_text='(optional) Name der SenseBox. Wird automatisch ermittelt', max_length=255)),
                ('location_latitude', models.CharField(blank=True, help_text='(optional) Latitude der SenseBox. Wird automatisch ermittelt', max_length=255, null=True)),
                ('location_longitude', models.CharField(blank=True, help_text='(optional) Longitude der SenseBox. Wird automatisch ermittelt', max_length=255, null=True)),
                ('error_message', models.CharField(blank=True, help_text='Fehlermeldung der Box. Möglicherweise offline, fehlerhafte Werte etc. Box dann entfernen.', max_length=255, null=True)),
                ('textfield', models.TextField(blank=True, help_text='(optional) Textfeld für Notizen')),
                ('grouptags', models.ManyToManyField(blank=True, to='home.grouptag', verbose_name='associated Group Tags')),
            ],
            options={
                'verbose_name': 'SenseBox',
                'verbose_name_plural': 'SenseBox Table',
            },
        ),
        migrations.DeleteModel(
            name='GalleryPage',
        ),
        migrations.DeleteModel(
            name='ImpressumPage',
        ),
    ]
