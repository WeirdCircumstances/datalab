# Generated by Django 5.0.6 on 2024-06-04 11:29

import wagtail.blocks
import wagtail.fields
import wagtail.images.blocks
from django.db import migrations


class Migration(migrations.Migration):

    dependencies = [
        ('home', '0023_alter_homepage_body_alter_impressumpage_body'),
    ]

    operations = [
        migrations.AlterField(
            model_name='homepage',
            name='body',
            field=wagtail.fields.StreamField([('blog_entry', wagtail.blocks.StructBlock([('title_image', wagtail.images.blocks.ImageChooserBlock(help_text='Titelbild des Blogeintrags', required=True)), ('title_text', wagtail.blocks.CharBlock(help_text='Titel des Blogeintrags', required=True)), ('content', wagtail.blocks.StreamBlock([('image', wagtail.images.blocks.ImageChooserBlock()), ('paragraph', wagtail.blocks.RichTextBlock()), ('button', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('link', wagtail.blocks.PageChooserBlock(null=True)), ('text', wagtail.blocks.CharBlock(default='Button Text', null=True))]))), ('image_with_text', wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(null=True)), ('text', wagtail.blocks.CharBlock(null=True))]))], help_text='Inhalt des Blogeintrags'))])), ('paragraph', wagtail.blocks.StructBlock([('tag', wagtail.blocks.CharBlock(default='', help='Ein "tag" ist ein Element bestehend auf Buchstaben und/oder Zahlen. Es ist meist kurz, einzigartig und enthält keine Leerzeichen. Zwei Elemente können verbunden werden, wenn sie den gleichen Tag haben.', required=False)), ('paragraph', wagtail.blocks.RichTextBlock(features=['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'bold', 'italic', 'link', 'lead', 'hr', 'ul', 'ol', 'bold', 'italic'], help_text='Textfeld für beliebigen Text'))])), ('big_image', wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(blank=True, help_text='Großes Bild, geeignet für den Beginn eines Blogeintrags', null=True))])), ('bricks', wagtail.blocks.StructBlock([('header', wagtail.blocks.CharBlock(default='Überschrift', help_text='Überschrift mit Biene', null=True, required=True)), ('brick_list', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('double', wagtail.blocks.BooleanBlock(help_text='Das Bild in doppelter Breite anzeigen?', null=True, required=False)), ('cubic', wagtail.blocks.BooleanBlock(help_text='Das Bild in groß als Quadrat anzeigen?', null=True, required=False)), ('image', wagtail.images.blocks.ImageChooserBlock(blank=True, help_text='Bild', null=True)), ('text', wagtail.blocks.RichTextBlock(null=True, required=False))])))]))], default=None),
        ),
        migrations.AlterField(
            model_name='impressumpage',
            name='body',
            field=wagtail.fields.StreamField([('blog_entry', wagtail.blocks.StructBlock([('title_image', wagtail.images.blocks.ImageChooserBlock(help_text='Titelbild des Blogeintrags', required=True)), ('title_text', wagtail.blocks.CharBlock(help_text='Titel des Blogeintrags', required=True)), ('content', wagtail.blocks.StreamBlock([('image', wagtail.images.blocks.ImageChooserBlock()), ('paragraph', wagtail.blocks.RichTextBlock()), ('button', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('link', wagtail.blocks.PageChooserBlock(null=True)), ('text', wagtail.blocks.CharBlock(default='Button Text', null=True))]))), ('image_with_text', wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(null=True)), ('text', wagtail.blocks.CharBlock(null=True))]))], help_text='Inhalt des Blogeintrags'))])), ('paragraph', wagtail.blocks.StructBlock([('tag', wagtail.blocks.CharBlock(default='', help='Ein "tag" ist ein Element bestehend auf Buchstaben und/oder Zahlen. Es ist meist kurz, einzigartig und enthält keine Leerzeichen. Zwei Elemente können verbunden werden, wenn sie den gleichen Tag haben.', required=False)), ('paragraph', wagtail.blocks.RichTextBlock(features=['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'bold', 'italic', 'link', 'lead', 'hr', 'ul', 'ol', 'bold', 'italic'], help_text='Textfeld für beliebigen Text'))])), ('big_image', wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(blank=True, help_text='Großes Bild, geeignet für den Beginn eines Blogeintrags', null=True))])), ('bricks', wagtail.blocks.StructBlock([('header', wagtail.blocks.CharBlock(default='Überschrift', help_text='Überschrift mit Biene', null=True, required=True)), ('brick_list', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('double', wagtail.blocks.BooleanBlock(help_text='Das Bild in doppelter Breite anzeigen?', null=True, required=False)), ('cubic', wagtail.blocks.BooleanBlock(help_text='Das Bild in groß als Quadrat anzeigen?', null=True, required=False)), ('image', wagtail.images.blocks.ImageChooserBlock(blank=True, help_text='Bild', null=True)), ('text', wagtail.blocks.RichTextBlock(null=True, required=False))])))]))], default=None),
        ),
    ]
