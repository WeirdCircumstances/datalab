# Generated by Django 5.0.6 on 2024-06-11 12:52

import django.db.models.deletion
import wagtail.blocks
import wagtail.fields
import wagtail.images.blocks
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('blog', '0003_alter_blogpage_body'),
        ('wagtailcore', '0093_uploadedfile'),
    ]

    operations = [
        migrations.CreateModel(
            name='TravelBlogHome',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('body', wagtail.fields.StreamField([('blog_cards', wagtail.blocks.StructBlock([]))])),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='TravelBlogPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('body', wagtail.fields.StreamField([('content', wagtail.blocks.StructBlock([('title_image', wagtail.images.blocks.ImageChooserBlock(help_text='Titelbild des Blogeintrags', required=True)), ('title_text', wagtail.blocks.CharBlock(help_text='Titel des Blogeintrags', required=True)), ('content', wagtail.blocks.StreamBlock([('image', wagtail.images.blocks.ImageChooserBlock()), ('paragraph', wagtail.blocks.RichTextBlock()), ('button', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('link', wagtail.blocks.PageChooserBlock(null=True)), ('text', wagtail.blocks.CharBlock(default='Button Text', null=True))]))), ('image_with_text', wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(null=True)), ('text', wagtail.blocks.CharBlock(null=True))]))], help_text='Inhalt des Blogeintrags'))])), ('bricks', wagtail.blocks.StructBlock([('header', wagtail.blocks.CharBlock(default='Überschrift', help_text='Überschrift mit Biene', null=True, required=True)), ('brick_list', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('double', wagtail.blocks.BooleanBlock(help_text='Das Bild in doppelter Breite anzeigen?', null=True, required=False)), ('cubic', wagtail.blocks.BooleanBlock(help_text='Das Bild in groß als Quadrat anzeigen?', null=True, required=False)), ('image', wagtail.images.blocks.ImageChooserBlock(blank=True, help_text='Bild', null=True)), ('text', wagtail.blocks.RichTextBlock(null=True, required=False))])))]))])),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.AlterField(
            model_name='blogpage',
            name='body',
            field=wagtail.fields.StreamField([('content', wagtail.blocks.StructBlock([('title_image', wagtail.images.blocks.ImageChooserBlock(help_text='Titelbild des Blogeintrags', required=True)), ('title_text', wagtail.blocks.CharBlock(help_text='Titel des Blogeintrags', required=True)), ('content', wagtail.blocks.StreamBlock([('image', wagtail.images.blocks.ImageChooserBlock()), ('paragraph', wagtail.blocks.RichTextBlock()), ('button', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('link', wagtail.blocks.PageChooserBlock(null=True)), ('text', wagtail.blocks.CharBlock(default='Button Text', null=True))]))), ('image_with_text', wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(null=True)), ('text', wagtail.blocks.CharBlock(null=True))]))], help_text='Inhalt des Blogeintrags'))])), ('bricks', wagtail.blocks.StructBlock([('header', wagtail.blocks.CharBlock(default='Überschrift', help_text='Überschrift mit Biene', null=True, required=True)), ('brick_list', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('double', wagtail.blocks.BooleanBlock(help_text='Das Bild in doppelter Breite anzeigen?', null=True, required=False)), ('cubic', wagtail.blocks.BooleanBlock(help_text='Das Bild in groß als Quadrat anzeigen?', null=True, required=False)), ('image', wagtail.images.blocks.ImageChooserBlock(blank=True, help_text='Bild', null=True)), ('text', wagtail.blocks.RichTextBlock(null=True, required=False))])))]))]),
        ),
    ]
