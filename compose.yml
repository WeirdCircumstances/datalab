services:
  datalab:
    build:
      context: .
      dockerfile: Tooling/dev/Dockerfile
    #image: datalab.dev
    command: daphne -b localhost -p 8000 datalab.asgi:application
    #gunicorn --workers=1 --log-level=debug datalab.wsgi:application --bind 0.0.0.0:8000 --timeout 600
    #python manage.py runserver 0.0.0.0:8000
    ports:
      - '8000:8000'
    #network_mode: "host"
    volumes:
      - type: bind
        source: .
        target: /app
    env_file:
      - .env.dev
    restart: unless-stopped
    depends_on:
      - db
      - influx
      - redis

  db:
    image: postgres:15-alpine
    restart: unless-stopped
    volumes: # location: /var/lib/docker/volumes/
      - db:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    env_file:
      - .env.dev

  influx:
    image: influxdb:2
    restart: unless-stopped
    ports:
      - "8086:8086"
    volumes:
      - influxdb_data:/var/lib/influxdb2
      - influxdb_config:/etc/influxdb2

  redis:
    image: redis/redis-stack:latest
    ports:
      - "6379:6379"
    restart: unless-stopped

  celery:
    build:
      context: .
      dockerfile: Tooling/dev/Dockerfile
    command: celery -A datalab worker --loglevel=info
    volumes:
      - .:/app
    depends_on:
      - redis
      - datalab
    env_file:
      - .env.dev


volumes:
  db:
  #datalab_media:
  #datalab_static:
  influxdb_data:
  influxdb_config: